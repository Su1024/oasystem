<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oasystem.dao.attend.AttendsInfoMapper">
    <resultMap id="BaseResultMap" type="com.oasystem.model.AttendsInfo">
        <!--@mbg.generated-->
        <!--@Table attends_info-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="attend_time" jdbcType="TIMESTAMP" property="attendTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <association property="userInfo" javaType="com.oasystem.model.UserInfo">
            <id property="id" column="id"/>
            <result property="name" column="user_name"/>
            <result property="userCode" column="user_code"/>
            <result property="gender" column="gender"/>
            <result property="deptName" column="dept_name"/>
            <result property="deptId" column="dept_id"/>
        </association>
        <association property="deptInfo" javaType="com.oasystem.model.DeptInfo">
            <id property="id" column="id"/>
            <result property="name" column="dept_name"/>
        </association>
    </resultMap>
    <resultMap id="AttendVo" type="com.oasystem.model.vo.AttendVo">
        <!--@mbg.generated-->
        <!--@Table attends_info-->
        <result column="user_code" jdbcType="INTEGER" property="userCode"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="attend_time_str" jdbcType="VARCHAR" property="attendTime"/>
        <result column="late" jdbcType="INTEGER" property="late"/>
        <result column="early" jdbcType="INTEGER" property="early"/>
        <result column="absenteeism" jdbcType="INTEGER" property="absenteeism"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, user_id, dept_id, remark, `type`, attend_time, `status`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from attends_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from attends_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.oasystem.model.AttendsInfo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into attends_info (user_id, dept_id, remark,
        `type`, attend_time, `status`
        )
        values (#{userId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{remark,jdbcType=LONGVARCHAR},
        #{type,jdbcType=INTEGER}, #{attendTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.oasystem.model.AttendsInfo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into attends_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="attendTime != null">
                attend_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="attendTime != null">
                #{attendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.oasystem.model.AttendsInfo">
        <!--@mbg.generated-->
        update attends_info
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=INTEGER},
            </if>
            <if test="attendTime != null">
                attend_time = #{attendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oasystem.model.AttendsInfo">
        <!--@mbg.generated-->
        update attends_info
        set user_id = #{userId,jdbcType=INTEGER},
        dept_id = #{deptId,jdbcType=INTEGER},
        remark = #{remark,jdbcType=LONGVARCHAR},
        `type` = #{type,jdbcType=INTEGER},
        attend_time = #{attendTime,jdbcType=TIMESTAMP},
        `status` = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--auto generated by MybatisCodeHelper on 2020-02-17-->
    <select id="selectAllByDeptIdAndAttendTime" resultMap="BaseResultMap">
        select a.*,b.name user_name,b.user_code,b.dept_id,b.gender,c.name dept_name
        from attends_info a
        join user_info b on a.user_id = b.id
        join dept_info c on a.dept_id = c.id
        <where>
            <if test="userCode != null and userCode != ''">
                AND b.user_code = #{userCode,jdbcType=VARCHAR}
            </if>
            <if test="deptId != null and deptId != ''">
                AND a.dept_id = #{deptId,jdbcType=INTEGER}
            </if>
            <if test="name != null and name != ''">
                and b.name like concat('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="beginDate != null">

                and a.attend_time <![CDATA[ >= ]]> #{beginDate,jdbcType=TIMESTAMP}

            </if>
            <if test="endDate != null">
                and a.attend_time <![CDATA[ <= ]]>#{endDate,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by attend_time desc,a.dept_id
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-02-17-->
    <select id="selectCountAllByDeptIdAndAttendTime" resultMap="AttendVo">
        select ai.dept_id,
        a.user_code,
        a.name,
        date_format(ai.attend_time, '%Y-%m-%d') as attend_time_str ,
        sum(case WHEN ai.status = 1 then 1 else 0 end) as late,
        sum(case WHEN ai.status = 2 then 1 else 0 end) as early,
        sum(case WHEN ai.status = 3 then 1 else 0 end) as absenteeism
        from attends_info ai
        join user_info a on a.id = ai.user_id
        <where>
            <if test="userCode != null and userCode != ''">
                AND a.user_code = #{userCode,jdbcType=VARCHAR}
            </if>
            <if test="deptId != null and deptId != ''">
                AND ai.dept_id = #{deptId,jdbcType=INTEGER}
            </if>
            <if test="name != null and name != ''">
                and a.name like concat('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="beginDate != null">
                and ai.attend_time <![CDATA[ >= ]]> #{beginDate,jdbcType=TIMESTAMP}
            </if>
            <if test="endDate != null">
                and ai.attend_time <![CDATA[ <= ]]>#{endDate,jdbcType=TIMESTAMP}
            </if>
        </where>
        group by ai.dept_id, ai.user_id, a.name, attend_time_str
        order by attend_time_str desc,ai.dept_id
    </select>
</mapper>